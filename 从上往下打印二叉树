从上往下打印出二叉树的每个节点，同层节点从左至右打印。

广度优先遍历
用队列，先入先出

public class Solution {    
    public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {        
        ArrayList<Integer> list = new ArrayList<Integer>();        
        if(root==null){            
        return list;        
        }        
        Queue<TreeNode> queue = new LinkedList<TreeNode>();        
        queue.offer(root);        
        while (!queue.isEmpty()) {            
        TreeNode treeNode = queue.poll();            
        if (treeNode.left != null) {               
            queue.offer(treeNode.left);            
        }            
        if (treeNode.right != null) {                
        queue.offer(treeNode.right);            
        }            
        list.add(treeNode.val);        
        }        
        return list;    
    }
}
