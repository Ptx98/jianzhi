数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。
例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。
由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。
如果不存在则输出0。

思路：用hashMap<int,int>  <值，出现的次数>

import java.util.HashMap;
public class Solution {
    public int MoreThanHalfNum_Solution(int [] array) {
        HashMap<Integer,Integer> map = new HashMap<Integer, Integer>();
        int ans = 0,len = array.length;
        for(int i=0;i<len;i++){
            if(map.containsKey(array[i])){
                int temp = map.get(array[i]) + 1;
                map.replace(array[i],temp);
            }
            else{
                map.put(array[i],1);
            }
        }
        int i =0;
        for(i =0;i<len;i++){
            if(map.get(array[i]) > len/2)//主要不要写成下标
            {
                ans = array[i];
                break;
            }
        }
        if(i == len)
            ans = 0;
        return ans;
    }
}
