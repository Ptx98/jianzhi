题目描述
输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），
返回结果为复制后复杂链表的head。
（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）

思路：要考虑的点是，特殊节点的指向
1.先根据指向下一个节点的指针新建所有节点，第二次遍历在考虑特殊指针；
2.用hashMap管理<oldNode,newNode>

/*
public class RandomListNode {
    int label;
    RandomListNode next = null;
    RandomListNode random = null;

    RandomListNode(int label) {
        this.label = label;
    }
}
*/
import java.util.HashMap;
public class Solution {
    public RandomListNode Clone(RandomListNode pHead)
    {
        HashMap<RandomListNode,RandomListNode> nodeMap = new HashMap<>();
        RandomListNode current = pHead,newCurrent = null,ans = null;
        nodeMap.put(null,null);
        while(current != null){
            RandomListNode newNode = new RandomListNode(current.label);
            nodeMap.put(current,newNode);
            if(ans == null)
                ans = newNode;
            if(newCurrent == null)
                newCurrent = newNode;
            else{
                newCurrent.next = newNode;
                newCurrent = newCurrent.next;
            }
            current = current.next;
        }
        
        current = pHead;
        newCurrent = ans;
        while(current != null){
            RandomListNode randomNode = nodeMap.get(current.random);
            newCurrent.random = randomNode;
            current = current.next;
            newCurrent = newCurrent.next;
        }
        
        return ans;
    }
}
